#ip 1
seti 123 0 2      #0:  R2 = 123
bani 2 456 2      #1:  R2 = 123 AND 456 = 72
eqri 2 72 2       #2:  R2 = 1 (TRUE)
addr 2 1 1        #3:  PC = R1 + R2 (GOTO #5)
seti 0 0 1        #4:  GOTO 1 (INFINITE LOOP!)
seti 0 3 2        #5:  R2 = 0  <== PROPER START HERE
bori 2 65536 5    #6:  R5 = 65536 OR R2 (R5 = 65536) <= outer loop starts here
seti 4843319 1 2  #7:  R2 = 4843319
bani 5 255 4      #8:  R4 = R5 AND 255 (R4=0) <= inner loop starts here
addr 2 4 2        #9:  R2 = R2 + R4 (R2 = 4843319 + 0 = 4843319)
bani 2 16777215 2 #10: R2 = R2 AND 16777215 (4843319 AND 16777215 = 4843319) - bottom 24 bits
muli 2 65899 2    #11: R2 = R2 * 65899 (319169878781)
bani 2 16777215 2 #12: R2 = R2 AND 16777215 = 121597 (bottom 24 bits)
gtir 256 5 4      #13: R4 = 256 > R5?
addr 4 1 1        #14: PC = PC + R4 (GOTO #16 if true)
addi 1 1 1        #15: GOTO #17
seti 27 4 1       #16: GOTO #28 -- break out of loop?
seti 0 7 4        #17: R4 = 0
addi 4 1 3        #18: R3 = R4 + 1 (R3 = 1) <= inner loop 2 starts here
muli 3 256 3      #19: R3 = R3 * 256 (<<8; R3 = 256)
gtrr 3 5 3        #20: R3 = R3 > R5? (256 > 65536?)
addr 3 1 1        #21: PC = PC + R3 (GOTO #23 if true)
addi 1 1 1        #22: GOTO #24
seti 25 0 1       #23: GOTO #26
addi 4 1 4        #24: R4 = R4 + 1
seti 17 0 1       #25: GOTO #18 <= inner loop 2
setr 4 1 5        #26: R5 = R4
seti 7 3 1        #27: GOTO #8 <= inner loop
eqrr 2 0 4        #28: -- R4 = R2 == R0?
addr 4 1 1        #28: PC = PC + R4 (EXIT IF TRUE)
seti 5 3 1        #29: GOTO #6
